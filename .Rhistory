ggplot(dfmns, aes(x=mns)) + geom_histogram(binwidth = 0.5) + xlim(2.5,8) +
geom_vline(xintercept = 5, colour="green", linetype = "longdash") +
ggtitle("Historgram from the exponential distribution")
mns=NULL
for (i in 1:1000) mns=c(mns, mean(rexp(40, lambda)))
dfmns <- data.frame(x=1:length(mns), mns)
ggplot(dfmns, aes(x=mns)) + geom_histogram(binwidth = 0.5) + xlim(2.5,8) +
geom_vline(xintercept = 5, colour="green", linetype = "longdash") +
ggtitle("Historgram from the exponential distribution") +
xlab ("1000 averages of 40 random numbers from the exponential distribution")
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution")
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="\ntheoretical mean", y=0), colour="blue", angle=90, text=element_text(size=11))
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="\ntheoretical mean", y=0), colour="blue", angle=90, text=element_text(size=11))
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0), colour="blue", angle=90, text=element_text(size=11))
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_label(aes(x=5, label="theoretical mean", y=0), colour="blue", angle=90, text=element_text(size=11))
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0), colour="blue", angle=90)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0), colour="blue", angle=90) +
geom_text(aes(x=mean(datexp), label="sample mean", y=0), colour="blue", angle=90)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0), colour="blue") +
geom_text(aes(x=mean(datexp), label="sample mean", y=0), colour="blue")
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c(5, mean(datexp)), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=6, label="theoretical mean", y=0), colour="blue") +
geom_text(aes(x=mean(datexp), label="sample mean", y=0), colour="blue")
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = c5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0), colour="red", angle = 90) +
geom_text(aes(x=mean(datexp), label="sample mean", y=0), colour="green", angle = 90)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0), colour="red", angle = 90) +
geom_text(aes(x=mean(datexp), label="sample mean", y=0), colour="green", angle = 90)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0, vjust = -1), colour="red", angle = 90) +
geom_text(aes(x=mean(datexp), label="sample mean", y=0, vjust = -1), colour="green", angle = 90)
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 90) +
geom_text(aes(x=mean(datexp), label="sample mean", y=0, vjust = -1), colour="green", angle = 90)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 3) +
geom_text(aes(x=mean(datexp), label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 3)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=7, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 3) +
geom_text(aes(x=mean(datexp), label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 3)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=7, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 3) +
geom_text(aes(x=mean(datexp)-2, label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 3)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=8, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 3) +
geom_text(aes(x=mean(datexp)-2, label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 3)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=7.5, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 3) +
geom_text(aes(x=mean(datexp)-2, label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 3)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=7.5, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 4) +
geom_text(aes(x=mean(datexp)-2, label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 4)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5+3, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 4) +
geom_text(aes(x=mean(datexp)-3, label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 4)
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 2) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5+3, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 4) +
geom_text(aes(x=mean(datexp)-2.5, label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 4)
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5+3, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 0, size = 4) +
geom_text(aes(x=mean(datexp)-2.5, label="sample mean", y=0, vjust = -1), colour="green", angle = 0, size = 4)
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5+3, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 90, size = 4) +
geom_text(aes(x=mean(datexp)-2.5, label="sample mean", y=0, vjust = -1), colour="green", angle = 90, size = 4)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=0, vjust = 1), colour="red", angle = 90, size = 4) +
geom_text(aes(x=mean(datexp), label="sample mean", y=0, vjust = -1), colour="green", angle = 90, size = 4)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=2, vjust = 1), colour="red", angle = 90, size = 4) +
geom_text(aes(x=mean(datexp), label="sample mean", y=2, vjust = -1), colour="green", angle = 90, size = 4)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=2, vjust = - 1), colour="red", angle = 90, size = 4) +
geom_text(aes(x=mean(datexp), label="sample mean", y=2, vjust = -1), colour="green", angle = 90, size = 4)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution") +
geom_text(aes(x=5, label="theoretical mean", y=2), colour="red", angle = 90, size = 4) +
geom_text(aes(x=mean(datexp), label="sample mean", y=2), colour="green", angle = 90, size = 4)
#the distribution of 1000 averages of 40 random numbers from the exponential distribution
mns=NULL
for (i in 1:1000) mns=c(mns, mean(rexp(40, lambda)))
dfmns <- data.frame(x=1:length(mns), mns)
ggplot(dfmns, aes(x=mns)) + geom_histogram(binwidth = 0.5) + xlim(2.5,8) +
geom_vline(xintercept = 5, colour="green", linetype = "longdash") +
ggtitle("Historgram from the exponential distribution") +
xlab ("1000 averages of 40 random numbers from the exponential distribution")
mns=NULL
for (i in 1:1000) mns=c(mns, mean(rexp(40, lambda)))
dfmns <- data.frame(x=1:length(mns), mns)
ggplot(dfmns, aes(x=mns)) + geom_histogram(binwidth = 0.5) + xlim(2.5,8) +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_text(aes(x=5, label="theoretical mean", y=2), colour="red", angle = 90, size = 4) +
ggtitle("Historgram from the exponential distribution") +
xlab ("1000 averages of 40 random numbers from the exponential distribution")
ggplot(dfmns, aes(x=mns)) + geom_histogram(binwidth = 0.5) + xlim(2.5,8) +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_text(aes(x=5, label="theoretical mean", y=2), colour="red", angle = 90, size = 4) +
ggtitle("Historgram from the exponential distribution") +
xlab ("1000 averages of 40 random numbers from the exponential distribution") +
geom_density(colour="blue", size=1)
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution")
#Histogram of 1000 random numbers from the exponential distribution
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution")
library(ggplot2)
# parameters for the exponential distribution, lambda = 0.2
# mean and standard deviations of the exponential distribution given lambda=0.2
lambda <- 0.2
meanexp <- 1/lambda
stdexp <- 1/lambda
set.seed(1)
#Histogram of 1000 random numbers from the exponential distribution
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution")
#the distribution of 1000 averages of 40 random numbers from the exponential distribution
mns=NULL
for (i in 1:1000) mns=c(mns, mean(rexp(40, lambda)))
dfmns <- data.frame(x=1:length(mns), mns)
ggplot(dfmns, aes(x=mns)) + geom_histogram(binwidth = 0.5) + xlim(2.5,8) +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_text(aes(x=5, label="theoretical mean", y=2), colour="red", angle = 90, size = 4) +
ggtitle("Historgram from the exponential distribution") +
xlab ("1000 averages of 40 random numbers from the exponential distribution") +
geom_density(colour="blue", size=1)
library(ggplot2)
# parameters for the exponential distribution, lambda = 0.2
# mean and standard deviations of the exponential distribution given lambda=0.2
lambda <- 0.2
meanexp <- 1/lambda
stdexp <- 1/lambda
set.seed(1)
#Histogram of 1000 random numbers from the exponential distribution
datexp <- rexp(1000, lambda)
mean(datexp)
dfexp <- data.frame(x=1:length(datexp), datexp)
ggplot(dfexp, aes(x=datexp))+ geom_histogram(binwidth = 1) + ggtitle("Historgram from the exponential distribution") +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(datexp), colour="green", linetype = "longdash") +
xlab ("1000 random numbers from the exponential distribution")
datexp <- rexp(1000, lambda)
mean(datexp)
std(datexp)
?sd
datexp <- rexp(1000, lambda)
mean(datexp)
sd(datexp)
mns=NULL
for (i in 1:1000) mns=c(mns, mean(rexp(40, lambda)))
mean(mns)
sd(mns)
lambda <- 0.2
meanexp <- 1/lambda
stdexp <- (1/lambda)/sqrt(40)
stdexp
mns=NULL
for (i in 1:1000) mns=c(mns, mean(rexp(40, lambda)))
mean(mns)
sd(mns)
dfmns <- data.frame(x=1:length(mns), mns)
ggplot(dfmns, aes(x=mns)) + geom_histogram(binwidth = 0.5) + xlim(2.5,8) +
geom_vline(xintercept = 5, colour="red", linetype = "longdash") +
geom_vline(xintercept = mean(mns), colour="green", linetype = "solid")
ggtitle("Historgram from the exponential distribution") +
xlab ("1000 averages of 40 random numbers from the exponential distribution")
9.48+66.36+23.68+16.06
144.48*0.8
25*0.45
library(UsingR);
data(galton);
head(galton)
library(reshape); long <- melt(galton)
head(long)
?melt
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
library(manipulate)
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour = "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
library(manipulate)
install.packages(manipulate)
install.packages("manipulate")
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour = "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
library(manipulate)
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
?manipulate
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour = "black", binwidth=1)
g <- g + geom_vline(xintercept = mean(galton$child), size = 3)
g
library(dplyr)
freqData <- as.data.frame(table(galton$child, galton$parent))
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g
library(dplyr)
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g
head(freqData)
table(galton$child, galton$parent)
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
install.packages("swirl")
library(swirl)
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col = 'red')
summary(regrline)
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs-lhs
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
quit()
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x
y
lm(y ~ x - 1)
data(mtcars)
lm(mpg ~ weight, mtcars)
head(mtcars)
lm(mpg ~ wet, mtcars)
lm(mpg ~ wt, mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(8.58-mean(x))/std(x)
(8.58-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("Regression Models")
swirl()
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- fit$residuals
varRes <- var(fit$residuals)
varEst <- var(est)
varEst <- var(ols.slope*galton$parent + ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(fit$residuals)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- 5
x
print(x)
x <- 1:20
x
1/0
1/Inf
attributes(x)
x
x <- 0:6
as.logical(x)
x <- c("a", "b", "c")
as.numeric(x)
x <- 1:3
y <- 10:12
z <- cbind(x,y)
dim(z)
z
x <- factor(c("yes", "yes", "no", "yes", "no"), levels = c("yes", "no"))
x
x <- c(1, 2, NA, 10, 3)
sum(is.na(x))
x <- 1:6
x[1]
x[[1]]
x <- c("a", "b", "c", "c", "d", "a")
x[1]
x[2]
x[1:4]
x[x > "a"]
u <- x > "a"
u
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c(1, 3)]
x <- c(1, 2, NA, 4, NA, 5)
bad <- is.na(x)
bad
x[bad]
x[!bad]
airquality[1:6, ]
good <- complete.cases(airquality)
good
airquality[good,][1:6, ]
x <- 1:4; y<- 6:9
x + y
x > 2
x >= 2
y == 8
x * y
x / y
library('randomForest') # classification algorithm
install.packages("randomForest")
install.packages("randomForest")
getwd()
train <- read.csv('/train.csv', stringsAsFactors = F)
test  <- read.csv('/test.csv', stringsAsFactors = F)
getwd()
dir()
setwd("./Desktop/DataScientist/KaggleCompetition/Titanic/")
setwd("./Desktop/DataScientist/KaggleCompetition/Titanic/")
getwd()
train <- read.csv('/train.csv', stringsAsFactors = F)
test  <- read.csv('/test.csv', stringsAsFactors = F)
train <- read.csv('train.csv', stringsAsFactors = F)
test  <- read.csv('test.csv', stringsAsFactors = F)
setwd("./Desktop/DataScientist/KaggleCompetition/Titanic/")
train <- read.csv('train.csv', stringsAsFactors = F)
test  <- read.csv('test.csv', stringsAsFactors = F)
full  <- bind_rows(train, test) # bind training & test data
# check data
str(full)
library('dplyr') # data manipulation
full  <- bind_rows(train, test) # bind training & test data
# check data
str(full)
full$Title <- gsub('(., )|(\..)', '', full$Name)
# Grab title from passenger names
full$Title <- gsub('(., )|(\\..)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
obj <- "Bausch, Mr. Tommy Lee"
obj
Title <- gsub('(., )|(\..)', '', obj)
Title <- gsub('(.*, )|(\\..)', '', obj)
Title
Title <- gsub('(.*, )|(\\..*)', '', obj)
Title
